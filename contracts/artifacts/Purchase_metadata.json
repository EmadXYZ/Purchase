{
	"compiler": {
		"version": "0.8.24+commit.e11b9ed9"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "payable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "InvalidState",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "OnlyBuyer",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "OnlySeller",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ValueNotEven",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [],
				"name": "Aborted",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [],
				"name": "ItemReceived",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [],
				"name": "PurchaseConfirmed",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [],
				"name": "SellerRefunded",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "abort",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "buyer",
				"outputs": [
					{
						"internalType": "address payable",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "confirmPurchase",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "confirmReceived",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "refundSeller",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "seller",
				"outputs": [
					{
						"internalType": "address payable",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "state",
				"outputs": [
					{
						"internalType": "enum Purchase.State",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "value",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"details": "Buyer deposits funds that are only released upon confirmation of delivery.",
			"errors": {
				"InvalidState()": [
					{
						"details": "Custom error for incorrect state"
					}
				],
				"OnlyBuyer()": [
					{
						"details": "Custom error for buyer-only functions"
					}
				],
				"OnlySeller()": [
					{
						"details": "Custom error for seller-only functions"
					}
				],
				"ValueNotEven()": [
					{
						"details": "Custom error when initial value is not even"
					}
				]
			},
			"kind": "dev",
			"methods": {
				"abort()": {
					"details": "Only callable by seller in Created state"
				},
				"confirmPurchase()": {
					"details": "Requires exact 2 * value; moves contract to Locked state"
				},
				"confirmReceived()": {
					"details": "Releases buyer's deposit back to them; transitions to Release state"
				},
				"constructor": {
					"details": "Requires that the sent value is an even number"
				},
				"refundSeller()": {
					"details": "Transfers total balance (3 * value) to seller and finalizes contract"
				}
			},
			"title": "Secure Purchase Agreement",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"abort()": {
					"notice": "Abort the purchase and reclaim funds"
				},
				"confirmPurchase()": {
					"notice": "Buyer confirms the purchase by depositing double the seller’s amount"
				},
				"confirmReceived()": {
					"notice": "Buyer confirms item was received"
				},
				"constructor": {
					"notice": "Deploy contract and lock in seller’s initial deposit"
				},
				"refundSeller()": {
					"notice": "Seller claims payment after buyer confirms delivery"
				}
			},
			"notice": "Implements a simple escrow contract between a buyer and a seller.",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/Purchase.sol": "Purchase"
		},
		"evmVersion": "shanghai",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/Purchase.sol": {
			"keccak256": "0x4d4413ab26a5083d609a011b8baa340a2f74fba23e60d5dfa0b1c39e8fd41f73",
			"license": "MIT",
			"urls": [
				"bzz-raw://9475b006b4870bfeb470e996de8e2a76f79e7399c76f0df9eefa16338b7e2b62",
				"dweb:/ipfs/QmZPkRtoZtKsuGLHyZsmrLU3HXNmncoDUigwvhkMZExfnq"
			]
		}
	},
	"version": 1
}